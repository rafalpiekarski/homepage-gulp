!function(n){var c={};function l(e){if(c[e])return c[e].exports;var o=c[e]={i:e,l:!1,exports:{}};return n[e].call(o.exports,o,o.exports,l),o.l=!0,o.exports}l.m=n,l.c=c,l.d=function(n,c,e){l.o(n,c)||Object.defineProperty(n,c,{enumerable:!0,get:e})},l.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},l.t=function(n,c){if(1&c&&(n=l(n)),8&c)return n;if(4&c&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(l.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&c&&"string"!=typeof n)for(var o in n)l.d(e,o,function(c){return n[c]}.bind(null,o));return e},l.n=function(n){var c=n&&n.__esModule?function(){return n.default}:function(){return n};return l.d(c,"a",c),c},l.o=function(n,c){return Object.prototype.hasOwnProperty.call(n,c)},l.p="",l(l.s=0)}([function(module,exports,__webpack_require__){"use strict";eval(" \r\n\r\n// // // service worker registration - remove if you're not going to use it\r\n\r\n if ('serviceWorker' in navigator) {\r\n   window.addEventListener('load', function() {\r\n     navigator.serviceWorker.register('serviceworker.js').then(function(registration) {\r\n       // Registration was successful\r\n       console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n     }, function(err) {\r\n      // registration failed :(\r\n      console.log('ServiceWorker registration failed: ', err);\r\n    });\r\n  });\r\n}\r\n\r\n// place your code below\r\n\r\n\r\n// // 1. cwiczenie\r\n// // po kliklnieciu w button zmieni sie tytul w headerze\r\n// //\r\n\r\n// const button = document.querySelector('.header__button--js');\r\n// console.log(button);\r\n\r\n// // I sposob na wypisanie czegos w konsoli\r\n// button.addEventListener('click', handleClick);\r\n\r\n// // II sposob na wypisanie czegos w konsoli (fat arrow)\r\n// button.addEventListener('click', () => {\r\n//     console.log('hej funkcja fat arrow');\r\n// });\r\n// function handleClick() {\r\n//     console.log('hej');\r\n// }\r\n\r\n// // III sposob na wypisanie czegos - z parametrem domyslnym (e)\r\n// // nie musze wypisywac (e), bo jest to domyslne => ()\r\n// button.addEventListener('click', (e) => {\r\n//     //wywoluje (e) i tam sa parametry\r\n//     console.log(e);\r\n//     console.log('hej funkcja fat arrow z parametrem e');\r\n// });\r\n\r\n// // 2. cwiczenie\r\n// // podmiana header__title--js + dodanie klasy zmieniajacej kolor na czerwony\r\n// //\r\n// button.addEventListener('click', (e) => {\r\n//     const header = document.querySelector('.header__title--js');\r\n//     header.innerHTML = 'dobrze Cię widzieć na mojej stronie :)';\r\n//     header.classList.add('header__title--red');\r\n// });\r\n\r\n// // 3. cwiczenie\r\n// // przycisk zmieniający treść w sekcji JS\r\n// //\r\n// const buttonChange = document.querySelector('.article__button--js-change');\r\n// buttonChange.addEventListener('click', (e) => {\r\n//     const changing = document.querySelector('.article__content--js-change');\r\n//     changing.innerHTML = 'zmieniona tresc';\r\n// });\r\n\r\n// // 4. cwiczenie\r\n// // przycisk dodający klasę w sekcji JS - klasa zmieni kolor czcionki\r\n// //\r\n// const buttonAdd = document.querySelector('.article__button--js-add');\r\n// buttonAdd.addEventListener('click', (e) => {\r\n//     const adding = document.querySelector('.article__content--js-add');\r\n//     adding.classList.add('header__title--red');\r\n// });\r\n\r\n// // 5. cwiczenie\r\n// // przycisk żonglujący klasą w sekcji JS - klasa się przełącza\r\n// //\r\n// const buttonToggle = document.querySelector('.article__button--js-toggle');\r\n// buttonToggle.addEventListener('click', (e) => {\r\n//     const toggling = document.querySelector('.article__content--js-toggle');\r\n//     toggling.classList.toggle('header__title--red');\r\n// });\r\n\r\n// //\r\n// // hamburger menu - dodawanie odejmowanie klasy odpowiedzialnej za ikonke hamburgera\r\n// //\r\n// const navigationSwitcher = document.querySelector('.navigation__switcher--js');\r\n// navigationSwitcher.addEventListener('click', (e) => {\r\n//     const navigationList = document.querySelector('.navigation__list--js');\r\n//     navigationList.classList.toggle('navigation__list--visible');\r\n// });\r\n\r\n// //\r\n// // Przykladowy obiekt i cwiczenia na nim\r\n// //\r\n\r\n// const deathStar = {\r\n//     diameter: 120000,\r\n//     fire: (target) => {\r\n//         console.log(`${target} destroyed`)\r\n//     },\r\n//     isOperating: true,\r\n//     levels: 357,\r\n//     name: 'Death Star',\r\n//     population: 10000,\r\n//     crew: {\r\n//         role: 'captain',\r\n//         name: 'deathstar captain'\r\n//     }\r\n// }\r\n\r\n// console.log(deathStar.name);\r\n// console.log(deathStar.level);\r\n// deathStar.fire('Aldebaran');\r\n\r\n// //jeżeli wynik isOperating = true, to wtedy wypisz console.log\r\n// if (deathStar.isOperating) {console.log('działa')};\r\n\r\n// deathStar.isOperating = false;\r\n// if (deathStar.isOperating) {console.log('działa')\r\n// }\r\n// else {console.log('nie dziala');\r\n// };\r\n\r\n// //\r\n// // tablice\r\n// //\r\n\r\n// // definiowanie tablicy stringów z 3 elementami\r\n// const hardware=['keyboard', 'mouse', 'tower'];\r\n\r\n// // definiowanie tablicy obiektów\r\n// const news = [\r\n//     {title: 'wtf',\r\n//      content: 'lorem ipsum dolor'\r\n//     },\r\n//     {title: 'co ten frontend',\r\n//     content: 'lorem ipsum dolor',\r\n//     link: 'https://cotenfrontend.pl'\r\n//     }\r\n// ]\r\n\r\n// //\r\n// // pętle\r\n// //\r\n\r\n// // pętla for\r\n// for (let i=0; i<3; i++) {\r\n//     console.log(`${i+1} wykonań pętli`);\r\n// }\r\n\r\n// // wypisanie elementów tablicy dzięki pętli for\r\n\r\n// // const foundationBooks = ['preludium fundacji', 'narodziny fundacji', 'fundacja'];\r\n// // for (j = 0; j < foundationBooks.length; i++) {\r\n// //     console.log(`Na miejscu ${j} znajduje się element: ${foundationBooks[j]}`);\r\n// // };\r\n\r\n// for (k=0; k < cookBooks.length; k++) {\r\n//     console.log(`element o indeksie ${k} ma treść ${cookBooks[k]}`);\r\n// };\r\n\r\n// pętla while\r\n\r\n// let whileA = 3;\r\n// while (whileA < 9) {\r\n//     console.log(whileA);\r\n//     whileA = whileA+3;\r\n// }\r\n// console.log(whileA);\r\n\r\n// // pętla do-while\r\n// let doWhileA = 9;\r\n// do {\r\n//     console.log(doWhileA);\r\n//     n=n+3;\r\n// }   while (doWhileA < 9);\r\n// console.log(doWhileA);\r\n\r\n// //pętla for in\r\n// const personForIn = {\r\n//     name: 'Rafal',\r\n//     age: 31,\r\n// }\r\n// for (let propertyName in personForIn) {\r\n//     console.log(`${propertyName}: ${personForIn[propertyName]}`);\r\n// }\r\n\r\n// //pętla for of - prostsza of for do wypisania elementów tablicy\r\n// const loopForOf = ['element1', 'element2', 'element3'];\r\n// for (let element of loopForOf) {\r\n//     console.log(element);\r\n// }\r\n\r\n//\r\n// przechowywanie danych\r\n//\r\n\r\n// //cookies\r\n// //wstawianie pary klucz - wartość do cookies\r\n// document.cookie = \"testoweCiacho = jakaśWartość\";\r\n// console.log(document.cookie);\r\n// //wstawianie drugiej pary klucz - wartość. Nie nadpisuje się a dodaje\r\n// document.cookie = \"testoweCiacho = drugieCookies\";\r\n// console.log(document.cookie);\r\n\r\n\r\n// // local storage\r\n// localStorage.setItem('name', 'wartość pierwsza');\r\n// console.log(localStorage);\r\n// localStorage.setItem('name', 'wartość druga, dopisuje się a nie nadpisuje');\r\n// console.log(localStorage);\r\n// localStorage.removeItem('name');\r\n// console.log(localStorage);\r\n// localStorage.setItem('name', 'wartość trzecia');\r\n// console.log(localStorage);\r\n\r\n// //deklaracja przykładowego obiektu do wstawiania go do Local Storage\r\n// const book = {\r\n//     name: 'book of contamination',\r\n//     size: '47 x 44',\r\n//     year: 1999\r\n// };\r\n\r\n// //próba wstawienia obiektu do localStorage\r\n// //nie uda się - w localStorage będzie [object object]\r\n// localStorage.setItem('book', book);\r\n// console.log(JSON.stringify(book));\r\n\r\n// //używam JSON.stringify aby dostać ciąg stringów JSONowy\r\n// const bookString = JSON.stringify(book);\r\n// console.log(bookString);\r\n// //wrzucam dane w formacie JSONowym do localStorage - teraz OK\r\n// localStorage.setItem('book', bookString);\r\n\r\n// //pobieranie klucza i wartosci z localStorage\r\n// //nie ma problemu - pojedyncza wartość pobrana\r\n// console.log(localStorage.getItem('name')); //wartość trzecia\r\n\r\n// //pobieranie klucza i wartości obiektu z localStorage\r\n// //pobrany ciąg znaków w formacie JSONa - taki jak tam był\r\n// console.log(localStorage.getItem('book'));\r\n\r\n// //zamiana stringa JSONowego na obiekt\r\n// const bookObject = localStorage.getItem('book');\r\n// console.log(bookObject);\r\n// const newBookObject = JSON.parse(bookObject);\r\n// console.log(newBookObject);\r\n\r\n// wstawianie danych do inputa odpornych na odświeżanie\r\n// dzięki trzymaniu tego, co wpisuję w Local Storage\r\n\r\n// // 1. Pobieram inputa\r\n// const focusInput = document.querySelector('.form__focus--js');\r\n// // 2. podnoszę klawisz czyli akcja 'keyup'\r\n// // do Local Storage ma się zapisać wartość z inputa\r\n// // console.log - aby zobaczyć o co chodzi\r\n// focusInput.addEventListener('keyup', (e) => {\r\n//     console.log(e.target);\r\n// });\r\n// // e.target daje w wyniku cały element\r\n// // zastosujemy więc e.target.value\r\n// // console.log - aby zobaczyć o co chodzi\r\n// focusInput.addEventListener('keyup', (e) => {\r\n//     console.log(e.target.value);\r\n// });\r\n// // wartość zapisuję do Local Storage\r\n// // za każdym razem jak puszcze klawisz, to wartośc => localStorage\r\n// focusInput.addEventListener('keyup', (e) => {\r\n//     localStorage.setItem('focusInput', e.target.value);\r\n// });\r\n// // wartość mamy w Local Storage, \r\n// // ale po wczytaniu strony nie są jeszcze pobierane\r\n// if (localStorage.getItem('focusInput').length > 0) {\r\n//     focusInput.value = localStorage.getItem('focusInput');\r\n// };\r\n\r\n// //Fetch API\r\n// fetch('https://api.github.com/users/rafalpiekarski/repos')\r\n// .then(resp => resp.json()) //zamienamy resp na jsona\r\n// .then(resp => {             //podmieniony json tu już jest\r\n//     console.log(resp)\r\n// })\r\n// .catch(error => {\r\n//     console.log('error')\r\n// })\r\n// console.log('test 2');\r\n// //teraz można wypisac sobie pobrane repozytoria\r\n// const list = document.querySelector('.list--js');\r\n// fetch('https://api.github.com/users/rafalpiekarski/repos?sort=updated&direction=asc')\r\n// .then(resp => resp.json()) //zamienamy resp na jsona\r\n// .then(resp => {             //podmieniony json tu już jest\r\n//     const repos = resp;\r\n//     for (const repo of repos) {\r\n//         //console.log(repo); //wszystko wypisze\r\n//         console.log(repo.name); //tylko nazwy repozytoriow\r\n//         console.log(repo.html_url);\r\n//         console.log(`repozytorium o nazwie: ${repo.name} ma adres: ${repo.html_url}`);\r\n//         list.innerHTML += `<li>${repo.name} <a href=\"${repo.html_url}\"> ${repo.html_url}</a></li>`;\r\n//     }\r\n// })\r\n// .catch(error => {\r\n//     console.log('error')\r\n// })\r\n\r\n//\r\n//Destrukturyzacja\r\n//\r\n\r\n// const person = {\r\n//     name: 'Rafal', age: 31\r\n// }\r\n// //mam obiekt person, do ktorego elementow chce sie odwołać.\r\n// console.log(`${person.name} ${person.age}`);\r\n// //Odwoływanie się jest jednak długie. Zastosuję więc zmienne.\r\n// const name = person.name;\r\n// const age = person.age;\r\n// console.log(`${name} ${age}`);\r\n// //Można jednak użyć desktrukturyzacji\r\n// const {name, age} = person;\r\n// console.log(`${name} ${age}`);\r\n// //Można stosować na tablicach\r\n// const food = ['pizza', 'burger', 'wrap'];\r\n// console.log(food);\r\n// const [firstFood, secondFood] = food;\r\n// console.log(firstFood);\r\n// console.log(secondFood);\r\n\r\n// //\r\n// //Spread operator - do łączenia\r\n// //\r\n// const contactData = {\r\n//     email: 'test@email.com',\r\n//     phone: 55553525\r\n// };\r\n// const contactAddress = {\r\n//     zipCode: '15-555',\r\n//     postCode: '435425'\r\n// };\r\n// //Chcę połączyć te dwa obiekty\r\n// const personData = {\r\n//     ...contactData,\r\n//     ...contactAddress\r\n// };//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);